AWSTemplateFormatVersion: "2010-09-09"
Description: WebTier template

Parameters:
  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: mykey

Resources:

  WebTierLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Type: application
      Subnets:
        - !ImportValue PublicSubnet1Id
        - !ImportValue PublicSubnet2Id
        - !ImportValue PublicSubnet3Id
      Scheme: internet-facing
      SecurityGroups:
        - !Ref WebTierLbSg

  WebInstanceLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref WebInstanceSg

  WebTierLbSg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: LoadBalancer Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
      VpcId: !ImportValue VpcId

  WebInstanceSg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: WebTier Instance SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !Ref WebTierLbSg
          FromPort: 80
          ToPort: 80
      VpcId: !ImportValue VpcId

  WebTierAsg:
    DependsOn: WebTierLbListener
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      MaxSize: !Sub [ "{{resolve:ssm:${parameter}:1}}", parameter: !ImportValue WebTierMaxSizeParameter ]
      MinSize: !Sub [ "{{resolve:ssm:${parameter}:1}}", parameter: !ImportValue WebTierMinSizeParameter ]
      DesiredCapacity: !Sub [ "{{resolve:ssm:${parameter}:1}}", parameter: !ImportValue WebTierDesSizeParameter ]
      VPCZoneIdentifier:
        - !ImportValue WebTierSubnet1Id
        - !ImportValue WebTierSubnet2Id
        - !ImportValue WebTierSubnet3Id
      LaunchTemplate:
        LaunchTemplateId: !Ref WebInstanceLaunchTemplate
        Version: "1"
      TargetGroupARNs:
        - !Ref WebTierTg

  WebTierLbListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref WebTierLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref WebTierTg

  WebTierTg:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue VpcId

Outputs:
  WebInstanceSg:
    Value: !Ref WebInstanceSg
    Export:
      Name: WebInstanceSg